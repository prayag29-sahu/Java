 
What is the default value of a boolean variable in Java
true
false  // T 
0
null
 
What is the size of a float in Java?
4 bytes // T 
8 bytes
2 bytes
Depends on system
 
 What is output   of:
System.out.println(10.0 / 3);
3
3.0
3.3333333333333335 // T 
Error
 
Which of the following is an example of explicit type casting?
int x = 10;
double d = x;
int y = (int) 5.6; // T 
float f = 5;
 
What will be the result of:
java
CopyEdit
byte b = (byte) 130; System.out.println(b);
130
-126  // T 
0
Error
 
Which one is invalid?
if (x == 10)
if (x = 5) // T 
if (x > 2)
if (true)
 
What is output of:

java
CopyEdit
int a = 10, b = 5; System.out.println(a % b);
0 // T 
5
2
1
 
What is output of:
java
CopyEdit
int a = 5; int b = a++ + ++a; System.out.println(b);
10
12 // T 
13
11
 
for (int i = 1; i < 2; i--);
Infinite loop // T 
1
Error
0
 
int[][] a = {{1,2,3}, {4,5}};
System.out.println(a[1].length);
*
2 // T 
3
5
Error
 
public class Test {
    public static void main(String[] args) {
        int i = 1;
        while (i++ <= 5) {
            if (i == 3) continue;
            System.out.print(i + " ");
        }
    }
}
1 2 3 4 5
2 4 5 6
2 3 4 5 // T 
 
 
public class LoopTest {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++);
            System.out.println("Value: " + i);
    }
}
Compilation error due to i being undefined in println // T 
It will print "Value: 4"
It will print "Value: 5"
Code runs but prints nothing
 
public class ArrayTest {
    public static void main(String[] args) {
        int[] nums = new int[5];
        nums[5] = 10;
        System.out.println("Done");
    }
}
Compile-time error
Runtime error: ArrayIndexOutOfBoundsException // T 
Prints: Done
Runtime error: NullPointerException
 
public class Matrix {
    public static void main(String[] args) {
        int[][] arr = new int[2][];
        arr[0][0] = 5;
        System.out.println(arr[0][0]);
    }
}
5
Compile-time error
Runtime error: NullPointerException
0
Correct answer
Runtime error: NullPointerException // T 
 
public class Test {
    public static void main(String[] args) {
        int i = 0;
        while (i < 5)
            System.out.println(i);
            i++;
    }
}
0 1 2 3 4
Infinite loop // T 
Compile-time error
Only 0 is printed repeatedly

 
public class TrickyLoop {
    public static void main(String[] args) {
        int i = 0;
        for (; i < 3; )
            System.out.print(i++ + " ");
            System.out.println("Done");
    }
}
0 1 2 Done // T 
0 1 2 3 Done
Compile-time error
Infinite loop
 
public class ArrTest {
    public static void main(String[] args) {
        int[] a = new int[3];
        System.out.println(a[0] + a[1] + a[2] + a[3]);
    }
}
0
3
Runtime Error // T 
Compile-time Error
 
public class Test {
    public static void main(String[] args) {
        int i = 10;
        while (i = 5) {
            System.out.println("Hello");
        }
    }
}
infinite loop
Prints Hello once
Compile-time Error // T 
Runtime Error
 
public class Quiz {
    public static void main(String[] args) {
        int[][] matrix = new int[2][2];
        System.out.println(matrix.length * matrix[0].length);
    }
}
2
4 // T 
0
Compile-time Error
 
public class Test {
    public static void main(String[] args) {
        int[] arr = {1, 2, 3};
        for (int i = 0; i <= arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
*
1 2 3
Compile-time Error
1 2 3 and then Runtime Error // T 
Infinite loop
 
public class Confuse {
    public static void main(String args[]) {
        for (int i = 0; i < 1; i++)
            for (int j = 0; j < 1; j++);
                System.out.println("Hi");
    }
}
Prints "Hi" once // T 
Prints "Hi" twice
Compile-time error
Doesn't print anything

 
public class Main {
    public static void main(String[] args) {
        int val = 1_0_0_0;
        System.out.println(val);
    }
}
1000 // T 
1_0_0_0
Compile Error
100_0

 
public class Main {
    public static void main(String[] args) {
        int x = 012;
        System.out.println(x);
    }
} 
12
10 // T bcs 012 base 10 val
8
Compile-time error

 
public class Main {
    public static void main(String[] args) {
        boolean b = false;
        if (b = true)
            System.out.println("Yes");
        else
            System.out.println("No");
    }
}
yes // T
No
Compile Error
true

 
public class Main {
    public static void main(String[] args) {
        char ch = 65;
        System.out.println(ch);
    }
}
65
A // T
Compile Error
6
 
public class Main {
    public static void main(String[] args) {
        char ch = 'AB';
        System.out.println(ch);
    }
}
AB
A
Compile-time error // T
B
 
What is the type of 3.14 by default in Java?
float
double // T
decimal
real
 
public class Main {
    public static void main(String[] args) {
        int x = 1_000_000;
        int y = _1000000;
        System.out.println(x + y);
    }
}
Yes, and prints 2000000
No, underscore at wrong position // T
No, integer too large
Yes, prints 1000000
 
public class Main {
    public static void main(String[] args) {
        char ch = 65 + 1;
        System.out.println(ch);
    }
}
66
B // T 
A
Compile Error
 
public class Main {
    public static void main(String[] args) {
        int a = 100_00;
        int b = 10__0;
        int c = 1_0_;
        int d = _10;
        System.out.println(a + b + c + d);
    }
}
Line with b
Line with c
Line with d // T
No error
 
public class Main {
    public static void main(String[] args) {
        int x = 10;
        if (x == 10)
            if (x > 5)
                System.out.println("A");
            else
                System.out.println("B");
    }
}
A  // T
B
No output
Compile Error
 
public class Main {
    public static void main(String[] args) {
        int a = 5;
        if (a > 2)
            if (a < 4)
                System.out.println("X");
            else
                System.out.println("Y");
    }
}
X
Y // T 
No Output
Compile Error
 
public class Main {
    public static void main(String[] args) {
        int num = 0;
        if (num = 5)
            System.out.println("Positive");
        else
            System.out.println("Negative");
    }
}
Positive
Negative
Compile Error // T
Runtime Error
 
public class Main {
    public static void main(String[] args) {
        int a = 5, b = 10;
        if (a > 5)
            if (b > 5)
                System.out.println("Hello");
            else
                System.out.println("Hi");
        else
            System.out.println("Hey");
    }
}
*
 
Hello
Hi
Hey  // T
No Output

 
public class Main {
    public static void main(String[] args) {
        int a = 10;
        if (a == 10)
            ;
        {
            System.out.println("Hello");
        }
    }
}
*
 
Hello  // T
No Output
Compile Error
Runtime Error
 
public class Main {
    public static void main(String[] args) {
        int x = 0;
        if (x)
            System.out.println("True");
        else
            System.out.println("False");
    }
}
True
False
Compile Error // T
0

 
public class Main {
    public static void main(String[] args) {
        if (false)
            System.out.println("True");
        else
            int x = 10;
    }
}
*
 
Yes
No, else cannot have declaration // T
No, x is undeclared
Yes, and prints nothing
 
public class Main {
    public static void main(String[] args) {
        int arr[] = new int[5];
        System.out.println(arr[2]);
    }
}
0 // T
Garbage value
Compile Error
Runtime Error
 
public class Main {
    public static void main(String[] args) {
        int arr[] = new int[3];
        arr[0] = 10;
        arr[3] = 30;
        System.out.println(arr[3]);
    }
}
30
0
Compile Error
Runtime Error // T
Correct answer
Runtime Error
 
public class Main {
    public static void main(String[] args) {
        int[] arr = {10, 20, 30};
        arr[1] = arr[2];
        arr[2] = arr[0];
        System.out.println(arr[1] + " " + arr[2]);
    }
}
20 30
30 10 // T
10 20
30 30
 
public class Main {
    public static void main(String[] args) {
        int arr[] = {1, 2, 3, 4};
        System.out.println(arr[1] + arr[3]);
    }
}
5
6 // T
7
10
 
public class Main {
    public static void main(String[] args) {
        int day = 3;
        switch(day) {
            case 1:
                System.out.print("Mon ");
            case 2:
                System.out.print("Tue ");
            case 3:
                System.out.print("Wed ");
            case 4:
                System.out.print("Thu ");
                break;
            case 5:
                System.out.print("Fri ");
        }
    }
}
 
Wed
Wed Thu // T 
Wed Thu Fri
Wed Thu Tue
 
public class Main {
    public static void main(String[] args) {
        char grade = 'B';
        switch(grade) {
            case 'A':
                System.out.println("Excellent");
                break;
            case 'B':
            case 'C':
                System.out.println("Good");
                break;
            default:
                System.out.println("Invalid");
        }
    }
}
*
 
Excellent
Good // T
Invalid
Compile Error
 
public class Main {
    public static void main(String[] args) {
        int num = 2;
        switch(num + 2) {
            case 3:
                System.out.print("Three ");
                break;
            case 4:
                System.out.print("Four ");
            default:
                System.out.print("Default ");
        }
    }
}
Four Default // T 
Four
Default
Compile Error
 
public class Main {
    public static void main(String[] args) {
        int x = 5;
        if(x == 5)
            System.out.println("Five");
        else
            System.out.println("Not Five")
    }
}

if statement condition is wrong
Missing semicolon after System.out.println("Not Five") // T
else cannot be used without brackets
main method should be static void main
 
public class Main {
    public static void main(String[] args) {
        int arr[] = new int[3];
        arr[3] = 100;
        System.out.println("Done");
    }
}
Array index out of bound (runtime error, not syntax) // T
Missing semicolon
new int[3] is wrong syntax 
println is invalid
Correct answer
Array index out of bound (runtime error, not syntax)
 
public class Main {
    public static void main(String[] args) {
        int 1num = 50;
        System.out.println(1num);
    }
}
Cannot start variable name with number // T
println should be outside main
Class name cannot be Main
50 is invalid literal
 
public class Main {
    static public void main(String[] args)
        System.out.println("Hello World");
    }
}
main method must start with public only
main must have return type void
Missing { after main(String[] args) // T
static keyword cannot come before public
 
Which of the following correctly describes the role of the JVM in Java?
 
JVM compiles Java code into bytecode
JVM interprets and runs bytecode on the machine // T
JVM converts Java code directly into machine code
JVM is used to write Java programs
Correct answer
JVM interprets and runs bytecode on the machine
 
 What is the main difference between JDK and JRE?
JDK is used for running Java programs; JRE is used for compiling them
JDK contains only the JVM; JRE contains development tools
JDK = JRE + Development tools (like javac, debugger, etc.) // T
JDK is used to convert Java into C++ code
